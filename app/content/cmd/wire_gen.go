// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"content/internal/conf"
	"content/internal/data/client"
	"content/internal/server"
	"content/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(bootstrap *conf.Bootstrap, logger log.Logger, helper *log.Helper) (*kratos.App, func(), error) {
	etcdCient, cleanup, err := client.NewEtcdClient(bootstrap, helper)
	if err != nil {
		return nil, nil, err
	}
	baseService := service.NewBaseService(bootstrap, helper, etcdCient)
	systemService := service.NewSystemService(baseService)
	v := service.ProvideServices(systemService)
	grpcServer := server.NewGRPCServer(bootstrap, logger, v)
	httpServer := server.NewHTTPServer(bootstrap, logger, v)
	app := newApp(logger, grpcServer, httpServer, etcdCient)
	return app, func() {
		cleanup()
	}, nil
}
