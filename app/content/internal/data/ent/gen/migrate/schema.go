// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ArticlesColumns holds the columns for the "articles" table.
	ArticlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "title", Type: field.TypeString},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "has_postscript", Type: field.TypeBool, Default: false},
		{Name: "reward_content", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "reward_points", Type: field.TypeInt32, Default: 0},
		{Name: "status", Type: field.TypeInt32, Default: 0},
		{Name: "type", Type: field.TypeInt32, Default: 0},
		{Name: "commentable", Type: field.TypeBool, Default: true},
		{Name: "anonymous", Type: field.TypeBool, Default: false},
		{Name: "thank_count", Type: field.TypeInt32, Default: 0},
		{Name: "like_count", Type: field.TypeInt32, Default: 0},
		{Name: "collect_count", Type: field.TypeInt32, Default: 0},
		{Name: "watch_count", Type: field.TypeInt32, Default: 0},
		{Name: "bounty_points", Type: field.TypeInt32, Default: 0},
		{Name: "accepted_answer_id", Type: field.TypeInt64, Nullable: true},
		{Name: "vote_total", Type: field.TypeInt32, Default: 0},
		{Name: "lottery_participant_count", Type: field.TypeInt32, Default: 0},
		{Name: "lottery_winner_count", Type: field.TypeInt32, Default: 0},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// ArticlesTable holds the schema information for the "articles" table.
	ArticlesTable = &schema.Table{
		Name:       "articles",
		Columns:    ArticlesColumns,
		PrimaryKey: []*schema.Column{ArticlesColumns[0]},
	}
	// ArticleActionRecordsColumns holds the columns for the "article_action_records" table.
	ArticleActionRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "type", Type: field.TypeInt32},
		{Name: "article_id", Type: field.TypeInt64},
	}
	// ArticleActionRecordsTable holds the schema information for the "article_action_records" table.
	ArticleActionRecordsTable = &schema.Table{
		Name:       "article_action_records",
		Columns:    ArticleActionRecordsColumns,
		PrimaryKey: []*schema.Column{ArticleActionRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "article_action_records_articles_action_records",
				Columns:    []*schema.Column{ArticleActionRecordsColumns[3]},
				RefColumns: []*schema.Column{ArticlesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "articleactionrecord_article_id_user_id_type",
				Unique:  true,
				Columns: []*schema.Column{ArticleActionRecordsColumns[3], ArticleActionRecordsColumns[1], ArticleActionRecordsColumns[2]},
			},
			{
				Name:    "articleactionrecord_article_id",
				Unique:  false,
				Columns: []*schema.Column{ArticleActionRecordsColumns[3]},
			},
			{
				Name:    "articleactionrecord_user_id",
				Unique:  false,
				Columns: []*schema.Column{ArticleActionRecordsColumns[1]},
			},
		},
	}
	// ArticleLotteriesColumns holds the columns for the "article_lotteries" table.
	ArticleLotteriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "prizes", Type: field.TypeJSON, Nullable: true},
		{Name: "start_at", Type: field.TypeTime, Nullable: true},
		{Name: "end_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeInt32, Default: 0},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "article_id", Type: field.TypeInt64},
	}
	// ArticleLotteriesTable holds the schema information for the "article_lotteries" table.
	ArticleLotteriesTable = &schema.Table{
		Name:       "article_lotteries",
		Columns:    ArticleLotteriesColumns,
		PrimaryKey: []*schema.Column{ArticleLotteriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "article_lotteries_articles_lotteries",
				Columns:    []*schema.Column{ArticleLotteriesColumns[7]},
				RefColumns: []*schema.Column{ArticlesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ArticleLotteryParticipantsColumns holds the columns for the "article_lottery_participants" table.
	ArticleLotteryParticipantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "lottery_id", Type: field.TypeInt64},
	}
	// ArticleLotteryParticipantsTable holds the schema information for the "article_lottery_participants" table.
	ArticleLotteryParticipantsTable = &schema.Table{
		Name:       "article_lottery_participants",
		Columns:    ArticleLotteryParticipantsColumns,
		PrimaryKey: []*schema.Column{ArticleLotteryParticipantsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "article_lottery_participants_article_lotteries_participants",
				Columns:    []*schema.Column{ArticleLotteryParticipantsColumns[4]},
				RefColumns: []*schema.Column{ArticleLotteriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ArticleLotteryWinnersColumns holds the columns for the "article_lottery_winners" table.
	ArticleLotteryWinnersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "prize", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "lottery_id", Type: field.TypeInt64},
	}
	// ArticleLotteryWinnersTable holds the schema information for the "article_lottery_winners" table.
	ArticleLotteryWinnersTable = &schema.Table{
		Name:       "article_lottery_winners",
		Columns:    ArticleLotteryWinnersColumns,
		PrimaryKey: []*schema.Column{ArticleLotteryWinnersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "article_lottery_winners_article_lotteries_winners",
				Columns:    []*schema.Column{ArticleLotteryWinnersColumns[5]},
				RefColumns: []*schema.Column{ArticleLotteriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ArticlePostscriptsColumns holds the columns for the "article_postscripts" table.
	ArticlePostscriptsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "article_id", Type: field.TypeInt64},
	}
	// ArticlePostscriptsTable holds the schema information for the "article_postscripts" table.
	ArticlePostscriptsTable = &schema.Table{
		Name:       "article_postscripts",
		Columns:    ArticlePostscriptsColumns,
		PrimaryKey: []*schema.Column{ArticlePostscriptsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "article_postscripts_articles_postscripts",
				Columns:    []*schema.Column{ArticlePostscriptsColumns[4]},
				RefColumns: []*schema.Column{ArticlesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ArticleVotesColumns holds the columns for the "article_votes" table.
	ArticleVotesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "vote_options", Type: field.TypeJSON, Nullable: true},
		{Name: "vote_counts", Type: field.TypeJSON, Nullable: true},
		{Name: "vote_multiple", Type: field.TypeBool, Default: false},
		{Name: "vote_anonymous", Type: field.TypeBool, Default: true},
		{Name: "total_count", Type: field.TypeInt32, Default: 0},
		{Name: "end_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "article_id", Type: field.TypeInt64},
	}
	// ArticleVotesTable holds the schema information for the "article_votes" table.
	ArticleVotesTable = &schema.Table{
		Name:       "article_votes",
		Columns:    ArticleVotesColumns,
		PrimaryKey: []*schema.Column{ArticleVotesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "article_votes_articles_votes",
				Columns:    []*schema.Column{ArticleVotesColumns[9]},
				RefColumns: []*schema.Column{ArticlesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ArticleVoteRecordsColumns holds the columns for the "article_vote_records" table.
	ArticleVoteRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "option_index", Type: field.TypeInt32},
		{Name: "anonymous", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "vote_id", Type: field.TypeInt64},
	}
	// ArticleVoteRecordsTable holds the schema information for the "article_vote_records" table.
	ArticleVoteRecordsTable = &schema.Table{
		Name:       "article_vote_records",
		Columns:    ArticleVoteRecordsColumns,
		PrimaryKey: []*schema.Column{ArticleVoteRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "article_vote_records_article_votes_records",
				Columns:    []*schema.Column{ArticleVoteRecordsColumns[6]},
				RefColumns: []*schema.Column{ArticleVotesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CommentsColumns holds the columns for the "comments" table.
	CommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "level", Type: field.TypeInt32},
		{Name: "status", Type: field.TypeInt32, Default: 0},
		{Name: "reply_count", Type: field.TypeInt32, Default: 0},
		{Name: "like_count", Type: field.TypeInt32, Default: 0},
		{Name: "collect_count", Type: field.TypeInt32, Default: 0},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "article_id", Type: field.TypeInt64},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true},
		{Name: "reply_id", Type: field.TypeInt64, Nullable: true},
	}
	// CommentsTable holds the schema information for the "comments" table.
	CommentsTable = &schema.Table{
		Name:       "comments",
		Columns:    CommentsColumns,
		PrimaryKey: []*schema.Column{CommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "comments_articles_comments",
				Columns:    []*schema.Column{CommentsColumns[10]},
				RefColumns: []*schema.Column{ArticlesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "comments_comments_parent_replies",
				Columns:    []*schema.Column{CommentsColumns[11]},
				RefColumns: []*schema.Column{CommentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "comments_comments_reply_replies",
				Columns:    []*schema.Column{CommentsColumns[12]},
				RefColumns: []*schema.Column{CommentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "comment_article_id_parent_id_status",
				Unique:  false,
				Columns: []*schema.Column{CommentsColumns[10], CommentsColumns[11], CommentsColumns[4]},
			},
		},
	}
	// CommentActionRecordsColumns holds the columns for the "comment_action_records" table.
	CommentActionRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "type", Type: field.TypeInt32},
		{Name: "comment_id", Type: field.TypeInt64},
	}
	// CommentActionRecordsTable holds the schema information for the "comment_action_records" table.
	CommentActionRecordsTable = &schema.Table{
		Name:       "comment_action_records",
		Columns:    CommentActionRecordsColumns,
		PrimaryKey: []*schema.Column{CommentActionRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "comment_action_records_comments_action_records",
				Columns:    []*schema.Column{CommentActionRecordsColumns[3]},
				RefColumns: []*schema.Column{CommentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "commentactionrecord_comment_id_user_id_type",
				Unique:  true,
				Columns: []*schema.Column{CommentActionRecordsColumns[3], CommentActionRecordsColumns[1], CommentActionRecordsColumns[2]},
			},
			{
				Name:    "commentactionrecord_comment_id",
				Unique:  false,
				Columns: []*schema.Column{CommentActionRecordsColumns[3]},
			},
			{
				Name:    "commentactionrecord_user_id",
				Unique:  false,
				Columns: []*schema.Column{CommentActionRecordsColumns[1]},
			},
		},
	}
	// DomainsColumns holds the columns for the "domains" table.
	DomainsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "tag_count", Type: field.TypeInt32, Default: 0},
		{Name: "is_nav", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// DomainsTable holds the schema information for the "domains" table.
	DomainsTable = &schema.Table{
		Name:       "domains",
		Columns:    DomainsColumns,
		PrimaryKey: []*schema.Column{DomainsColumns[0]},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt32, Default: 0},
		{Name: "article_count", Type: field.TypeInt32, Default: 0},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "domain_id", Type: field.TypeInt64, Nullable: true},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tags_domains_tags",
				Columns:    []*schema.Column{TagsColumns[7]},
				RefColumns: []*schema.Column{DomainsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ArticleTagsColumns holds the columns for the "article_tags" table.
	ArticleTagsColumns = []*schema.Column{
		{Name: "article_id", Type: field.TypeInt64},
		{Name: "tag_id", Type: field.TypeInt64},
	}
	// ArticleTagsTable holds the schema information for the "article_tags" table.
	ArticleTagsTable = &schema.Table{
		Name:       "article_tags",
		Columns:    ArticleTagsColumns,
		PrimaryKey: []*schema.Column{ArticleTagsColumns[0], ArticleTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "article_tags_article_id",
				Columns:    []*schema.Column{ArticleTagsColumns[0]},
				RefColumns: []*schema.Column{ArticlesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "article_tags_tag_id",
				Columns:    []*schema.Column{ArticleTagsColumns[1]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ArticlesTable,
		ArticleActionRecordsTable,
		ArticleLotteriesTable,
		ArticleLotteryParticipantsTable,
		ArticleLotteryWinnersTable,
		ArticlePostscriptsTable,
		ArticleVotesTable,
		ArticleVoteRecordsTable,
		CommentsTable,
		CommentActionRecordsTable,
		DomainsTable,
		TagsTable,
		ArticleTagsTable,
	}
)

func init() {
	ArticleActionRecordsTable.ForeignKeys[0].RefTable = ArticlesTable
	ArticleLotteriesTable.ForeignKeys[0].RefTable = ArticlesTable
	ArticleLotteryParticipantsTable.ForeignKeys[0].RefTable = ArticleLotteriesTable
	ArticleLotteryWinnersTable.ForeignKeys[0].RefTable = ArticleLotteriesTable
	ArticlePostscriptsTable.ForeignKeys[0].RefTable = ArticlesTable
	ArticleVotesTable.ForeignKeys[0].RefTable = ArticlesTable
	ArticleVoteRecordsTable.ForeignKeys[0].RefTable = ArticleVotesTable
	CommentsTable.ForeignKeys[0].RefTable = ArticlesTable
	CommentsTable.ForeignKeys[1].RefTable = CommentsTable
	CommentsTable.ForeignKeys[2].RefTable = CommentsTable
	CommentActionRecordsTable.ForeignKeys[0].RefTable = CommentsTable
	TagsTable.ForeignKeys[0].RefTable = DomainsTable
	ArticleTagsTable.ForeignKeys[0].RefTable = ArticlesTable
	ArticleTagsTable.ForeignKeys[1].RefTable = TagsTable
}
