// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "endpoint", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "module", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "group_name_endpoint",
				Unique:  true,
				Columns: []*schema.Column{GroupsColumns[1], GroupsColumns[2]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "nickname", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "introduction", Type: field.TypeString, Nullable: true},
		{Name: "mbti", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeInt, Default: 0},
		{Name: "group_name", Type: field.TypeString, Nullable: true},
		{Name: "follow_count", Type: field.TypeInt, Default: 0},
		{Name: "follower_count", Type: field.TypeInt, Default: 0},
		{Name: "last_login_time", Type: field.TypeTime, Nullable: true},
		{Name: "last_login_ip", Type: field.TypeString, Nullable: true},
		{Name: "online_minutes", Type: field.TypeInt, Default: 0},
		{Name: "last_checkin_time", Type: field.TypeTime, Nullable: true},
		{Name: "current_checkin_streak", Type: field.TypeInt, Default: 0},
		{Name: "longest_checkin_streak", Type: field.TypeInt, Default: 0},
		{Name: "language", Type: field.TypeString, Default: "zh-CN"},
		{Name: "timezone", Type: field.TypeString, Default: "Asia/Shanghai"},
		{Name: "theme", Type: field.TypeString, Default: "default"},
		{Name: "mobile_theme", Type: field.TypeString, Default: "default"},
		{Name: "enable_web_notify", Type: field.TypeBool, Default: true},
		{Name: "enable_email_subscribe", Type: field.TypeBool, Default: true},
		{Name: "public_points", Type: field.TypeBool, Default: true},
		{Name: "public_followers", Type: field.TypeBool, Default: true},
		{Name: "public_articles", Type: field.TypeBool, Default: true},
		{Name: "public_comments", Type: field.TypeBool, Default: true},
		{Name: "public_online_status", Type: field.TypeBool, Default: true},
		{Name: "country", Type: field.TypeString, Nullable: true},
		{Name: "province", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "public_location", Type: field.TypeBool, Default: true},
		{Name: "twofa_secret", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_name",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[1]},
			},
			{
				Name:    "user_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[4]},
			},
			{
				Name:    "user_phone",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		GroupsTable,
		UsersTable,
	}
)

func init() {
}
