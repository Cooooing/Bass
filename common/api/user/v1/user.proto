syntax = "proto3";

package common.api.user.v1;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "common/v1/common.proto";

option go_package = "common/api/user/v1;v1";

message User {
  // --- 基础信息 ---
  // 用户ID
  int64 id = 1;
  // 用户名
  string name = 2;
  // 昵称
  string nickname = 3;
  // 邮箱
  string email = 5;
  // 手机号
  string phone = 6;
  // 用户个人主页链接
  string url = 7;
  // 头像URL
  string avatar_url = 8;
  // 个人简介
  string introduction = 9;
  // 用户 MBTI 类型
  string mbti = 10;

  // --- 状态 ---
  // 用户状态：0-正常，1-封禁，2-注销
  int64 status = 11;
  // 用户组名称
  string group_name = 12;

  // --- 社交信息 ---
  // 关注数
  int64 follow_count = 13;
  // 粉丝数
  int64 follower_count = 14;

  // --- 登录信息 ---
  // 最近登录时间 (ISO8601格式)
  google.protobuf.Timestamp last_login_time = 15;
  // 最近登录IP
  string last_login_ip = 16;

  // --- 行为统计 ---
  // 在线总时长（分钟）
  int64 online_minutes = 17;
  // 最近签到时间
  google.protobuf.Timestamp last_checkin_time = 18;
  // 当前连续签到天数
  int64 current_checkin_streak = 19;
  // 最长连续签到天数
  int64 longest_checkin_streak = 20;

  // --- 用户偏好设置 ---
  // 用户语言
  string language = 21;
  // 时区
  string timezone = 22;
  // 皮肤主题
  string theme = 23;
  // 移动端皮肤主题
  string mobile_theme = 24;
  // 启用Web通知
  bool enable_web_notify = 25;
  // 启用邮件订阅
  bool enable_email_subscribe = 26;

  // --- 隐私设置 ---
  // 是否公开积分榜
  bool public_points = 27;
  // 是否公开粉丝列表
  bool public_followers = 28;
  // 是否公开帖子列表
  bool public_articles = 29;
  // 是否公开评论列表
  bool public_comments = 30;
  // 是否公开在线状态
  bool public_online_status = 31;

  // --- 地理信息 ---
  // 所在国家
  string country = 32;
  // 所在省份
  string province = 33;
  // 所在城市
  string city = 34;
  // 是否公开地理位置
  bool public_location = 35;

  // --- 其他 ---
  // 二步验证 Secret
  string twofa_secret = 36;

  // --- 审计字段 ---
  // 创建时间
  google.protobuf.Timestamp created_at = 37;
  // 更新时间
  google.protobuf.Timestamp updated_at = 38;
}

// Authentication 服务
service UserUserService {

  // 查询单个用户
  rpc GetOne (GetOneRequest) returns (GetOneReply) {
    option (google.api.http) = {
      post: "/v1/user/getOne"
      body: "*"
    };
  }

  // 查询用户列表（返回数组）
  rpc GetList (GetListRequest) returns (GetListReply) {
    option (google.api.http) = {
      post: "/v1/user/getList"
      body: "*"
    };
  }

  // 查询用户列表（返回map）
  rpc GetMap(GetMapRequest) returns (GetMapReply) {
    option (google.api.http) = {
      post: "/v1/user/getMap"
      body: "*"
    };
  }

}

message GetOneRequest {
  // 用户ID
  int64 id = 1;
}
message GetOneReply {
  User user = 1;
}

message GetListRequest {
  // 用户ID列表
  repeated int64 ids = 1;
}
message GetListReply {
  repeated User users = 1;
}

message GetMapRequest {
  // 用户ID列表
  repeated int64 ids = 1;
}
message GetMapReply {
  map<int64, User> users = 1;
}
